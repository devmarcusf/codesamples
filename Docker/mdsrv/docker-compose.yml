version: "3.8"

services:
# Indexers
  # Radarr – Movie Download and Management
  radarr:
    image: "hotio/radarr:nightly"
    hostname: radarr
    container_name: "radarr"
    volumes:
      - ${docker_dir}/radarr:/config # config files
      - ${data_dir}/media/movies:/movies # Media location
      - ${data_dir}/usenet/movies:/data/completed/movies # Usenet download location
      - ${data_dir}/torrents/completed:/data/completed/ # torrent download location
    ports:
      - target: 7878 # Unencrypted
        published: ${radarr_port}
        protocol: tcp
        mode: host
      - target: 9899 # Encrypted
        published: ${radarr_encrypted_port}
        protocol: tcp
        mode: host
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
    labels: 
      - "traefik.http.routers.radarr.rule=Host(`${radarr_route}.${domain}`)"

  # Sonarr – TV Show Download and Management
  sonarr:
    image: "hotio/sonarr:nightly"
    hostname: sonarr
    container_name: "sonarr"
    volumes:
      - ${docker_dir}/sonarr:/config # Config files
      - ${data_dir}/media/tvshows:/tvshows # Media location
      - ${data_dir}/usenet/tv:/data/tv # Usenet download location
      - ${data_dir}/torrents/completed:/data/completed/ # torrents download location
    ports:
      - target: 8989 # Unencrypted
        published: ${sonarr_port}
        protocol: tcp
        mode: host
      - target: 9898 # Encrypted
        published: ${sonarr_encrypted_port}
        protocol: tcp
        mode: host
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
    labels: 
      - "traefik.http.routers.sonarr.rule=Host(`${sonarr_route}.${domain}`)"
  
  # Books DOwnload and Management
  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    volumes:
      - ${docker_dir}/lazylibrarian:/config # COnfig files
      - ${data_dir}/media/books:/books # Media location
      - ${data_dir}/usenet/books:/downloads/usenet # Usenet file location
      - ${data_dir}/torrents/completed:/downloads/torrents # Torrent file location
    ports:
      - target: 5299
        published: ${lazylibrarian_port}
        protocol: tcp
        mode: host
    restart: always
    labels: 
      - "traefik.http.routers.lazylibrarian.rule=Host(`${lazylibrarian_route}.${domain}`)"
  
  # Jackett – Torrent Proxy
  jackett:
    image: "linuxserver/jackett:latest"
    hostname: jackett
    container_name: "jackett"
    volumes:
      - ${docker_dir}/jackett:/config
      - ${docker_dir}/shared:/shared
    ports:
      - target: 9117 # Unencrypted
        published: ${jackett_port}
        protocol: tcp
        mode: host
      - target: 9118 # Encrypted
        published: ${jackett_encrypted_port}
        protocol: tcp
        mode: host
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels: 
      - "traefik.http.routers.jackett.rule=Host(`${jackett_route}.${domain}`)"
  
# Download Clients
  # NZBGet - UseNet setup
  nzbget:
    image: linuxserver/nzbget:latest
    hostname: "nzbget"
    container_name: "nzbget"
    ports:
      - target: 6789 # Unencrypted
        published: ${nzbget_port}
        protocol: tcp
        mode: host
      - target: 6791 # ENcrypted
        published: ${nzbget_encrypted_port}
        protocol: tcp
        mode: host
    volumes:
      - ${data_dir}/usenet:/data
      - ${docker_dir}/nzbget:/config
    restart: always
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TZ}
    labels: 
      - "traefik.http.routers.nzbget.rule=Host(`${nzbget_route}.${domain}`)"

  # Transmission with VPN – Bittorrent Downloader
  transmission-vpn:
    container_name: transmission-vpn
    hostname: transmission
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: always
    ports:
      - target: 9091
        published: ${transmission_port}
        protocol: tcp
        mode: host
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${docker_dir}/transmission-vpn:/data
      - ${docker_dir}/shared:/shared
      - ${data_dir}/torrents:/data/watch
      - ${data_dir}/torrents/completed:/data/completed
      - ${data_dir}/torrents/incomplete:/data/incomplete
    environment:
      - OPENVPN_PROVIDER=IPVanish
      - OPENVPN_USERNAME=smrtrock@outlook.com
      - OPENVPN_PASSWORD=LKFern13!@
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - LOCAL_NETWORK=192.168.86.0/24
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*"
      - TRANSMISSION_RPC_PASSWORD=password
      - TRANSMISSION_RPC_USERNAME=admin
      - TRANSMISSION_UMASK=002
      - TRANSMISSION_RATIO_LIMIT=0.01
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP=30
      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
      - TRANSMISSION_INCOMPLETE_DIR=/data/incomplete
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
      - TRANSMISSION_WATCH_DIR=/data/watch
      - TRANSMISSION_WATCH_DIR_ENABLED=true
      - TRANSMISSION_DOWNLOAD_DIR=/data/completed
    labels: 
      - "traefik.http.routers.transmission.rule=Host(`${transmission_route}.${domain}`)"

# Media Servers
  # Plex Media Server
  plexms:
    container_name: plexms
    hostname: plexms
    restart: always
    image: plexinc/pms-docker
    volumes:
      - ${docker_dir}/plexms:/config
      - ${data_dir}/plex_tmp:/transcode
      - ${data_dir}/media/tvshows:/tv
      - ${data_dir}/media/movies:/movies
      - ${docker_dir}/shared:/shared
    ports:
      - "32400:32400/tcp"
      - "32401:32401/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - TZ=${TZ}
      - UMASK=002
      - HOSTNAME="Docker Plex"
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - ADVERTISE_IP="http://192.168.86.100:32400/,https://192.168.86.100:32401"
    labels: 
      - "traefik.http.routers.plexms.rule=Host(`${plex_route}.${domain}`)"

  emby:
    image: linuxserver/emby
    container_name: emby
    hostname: emby
    ports: 
      - target: 8096
        published: ${emby_port}
        protocol: tcp
        mode: host
      - target: 8920
        published: ${emby_encrypted_port}
        protocol: tcp
        mode: host
    network_mode: host # Enable DLNA and Wake-on-Lan
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - GIDList=100
    volumes: 
      - ${docker_dir}/emby:/config
      - ${data_dir}/media/tvshows:/tv
      - ${data_dir}/media/movies:/movies
      - ${docker_dir}/shared:/shared
    restart: always
    labels:
      - "traefik.http.routers.emby.rule=Host(`${emby_route}.${domain}`)"

  # Calibre  – Ebooks and Management (Server)
  calibre:
    image: linuxserver/calibre
    hostname: calibre
    container_name: calibre
    restart: always
    ports:
      - "${calibre_desktop_port}:8080" # Desktop GUI
      - "${calibre_web_UI_port}:8081" # Webserver GUI
    volumes:
      - ${docker_dir}/calibre:/config:rw
      - ${data_dir}:/data:rw
      - ${data_dir}/media/books:/books:rw
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002 #optional
    labels:
      - "traefik.http.routers.calibre.rule=Host(`${calibre_route}.${domain}`)"

# Utilities 
  # Watchtower - Automatic Update of Containers/Apps
  watchtower:
    container_name: watchtower
    hostname: watchtower
    restart: always
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: ${TZ}
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 0 4 * * *" # Everyday at 4 am
      WATCHTOWER_NOTIFICATIONS_LEVEL: debug
      # DOCKER_HOST: tcp://socket-proxy:2375
    
  #Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer:latest
    hostname: portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - target: 9000
        published: ${portainer_port}
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${docker_dir}/portainer/data:/data
      - ${docker_dir}/shared:/shared
    environment:
      - TZ=${TZ}
    labels: 
      - "traefik.http.routers.portainer.rule=Host(`${portainers_route}.${domain}`)"
  
  heimdall:
    image: linuxserver/heimdall
    hostname: heimdall
    container_name: heimdall
    restart: always
    environment: 
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports: 
      - target: 80
        published: ${heimdall_port}
        protocol: tcp
        mode: host
      - target: 4443
        published: ${heimdall_encrypted_port}
        protocol: tcp
        mode: host
    volumes:  
      - ${docker_dir}/heimdall:/config
    labels:
      - "traefik.http.routers.heimdall.rule=Host(`${heimdall_route}.${domain}`)" 
  
  reverse-proxy:
    # The official v2.0 Traefik docker image
    image: traefik:v2.4
    container_name: traefik
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true 
      #- --configFile=${docker_dir}/traefik2/traefik.toml
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --log=true
      - --log.level=ERROR # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --providers.docker
     # - --providers.docker.endpoints=tcp://socket-proxy:2375  
    ports:
      # The HTTP port
      - target: 80
        published: ${traefik_port}
        protocol: tcp
        mode: host
      # The Web UI (enabled by --api.insecure=true)
      - target: 8080
        published: ${traefik_webUI_port}
        protocol: tcp
        mode: host
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ${docker_dir}/traefik2/traefik.log:/traefik.log
      - ${docker_dir}/shared:/shared