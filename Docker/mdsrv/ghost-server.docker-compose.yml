version: "3.7"
services:
#  wireguard:
#    image: ghostserverd/wireguard
#    container_name: wireguard
#    restart: always
#    privileged: true
#    sysctls:
#      - "net.ipv6.conf.all.disable_ipv6=0"
#      - "net.ipv6.conf.default.forwarding=1"
#      - "net.ipv6.conf.all.forwarding=1"
#      - "net.ipv4.ip_forward=1"
#    cap_add:
#      - NET_ADMIN
#      - SYS_MODULE
#    networks:
#      default:
#        aliases:
#          - nzbget
#          - transmission
#    ports:
#      - "${NZBGET_PORT}:6789"
#      - "${TRANS_WEBUI_PORT}:${TRANS_WEBUI_PORT}"
#      # TRANS_CONNECTION_PORT may need to be port forwarded by your VPN
#      - "${TRANS_CONNECTION_PORT}:${TRANS_CONNECTION_PORT}"
#      - "${TRANS_CONNECTION_PORT}:${TRANS_CONNECTION_PORT}/udp"
#    environment:
#      - LOCAL_NETWORK=${LOCAL_NETWORK}
#      # NETWORK_NAME is not needed unless you are mounting docker.sock to write /etc/hosts
#      # - NETWORK_NAME=${NETWORK_NAME}
#      # this is required unless you are mounting docker.sock to write /etc/hosts
#      - IPTABLES_MASQ=0
#      # space separated  list of docker service names to make addressable
#      - SERVICE_NAMES=filebot sonarr radarr bazarr jackett heimdall tautulli plex
#      # local TLD to use when routing DNS requests which requires aliases for each service to be addressable from within the wireguard network
#      # - LOCAL_TLD=ghost
#    volumes:
#      - ${CONFIG_DIR}/wireguard:/etc/wireguard
#      - /lib/modules:/lib/modules
#      # this is no longer necessary but if enabled, will cause the /etc/hosts file to be written with all available services
#      # - /var/run/docker.sock:/var/run/docker.sock:ro
  #Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer:latest
    hostname: portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
    - "9000:9000"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ${USERDIR}/docker/portainer/data:/data
    - ${USERDIR}/docker/shared:/shared
    environment:
    - TZ=${TZ}

  # Organizer - Unified HTPC/Home Server Web Interface
  organizr:
    container_name: organizr
    hostname: organizr
    restart: always
    image: organizr/organizr
    volumes:
    - ${USERDIR}/docker/organizr:/config
    - ${USERDIR}/docker/shared:/shared
    ports:
    - "80:80"
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}

  # Watchtower - Automatic Update of Containers/Apps
  watchtower:
    container_name: watchtower
    hostname: watchtower
    restart: always
    image: v2tec/watchtower:latest
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup

  # Transmission with VPN – Bittorrent Downloader
  # transmission-vpn:
  #   container_name: transmission-vpn
  #   hostname: transmission
  #   image: haugene/transmission-openvpn
  #   cap_add:
  #   - NET_ADMIN
  #   devices:
  #   - /dev/net/tun
  #   restart: always
  #   ports:
  #   - "9091:9091"
  #   dns:
  #   - 8.8.8.8
  #   - 8.8.4.4
  #   volumes:
  #   - /etc/localtime:/etc/localtime:ro
  #   - ${USERDIR}/docker/transmission-vpn:/data
  #   - ${USERDIR}/docker/shared:/shared
  #   - ${USERDIR}/Downloads:/data/watch
  #   - ${USERDIR}/Downloads/completed:/data/completed
  #   - ${USERDIR}/Downloads/incomplete:/data/incomplete
  #   environment:
  #   - OPENVPN_PROVIDER=PIA
  #   - OPENVPN_USERNAME=YourPIAUsername
  #   - OPENVPN_PASSWORD=MyPIAPassword
  #   - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
  #   - LOCAL_NETWORK=192.168.1.0/24
  #   - PUID=${PUID}
  #   - PGID=${PGID}
  #   - TZ=${TZ}
  #   - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
  #   - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*"
  #   - TRANSMISSION_RPC_PASSWORD=password
  #   - TRANSMISSION_RPC_USERNAME=admin
  #   - TRANSMISSION_UMASK=002
  #   - TRANSMISSION_RATIO_LIMIT=0.01
  #   - TRANSMISSION_RATIO_LIMIT_ENABLED=true
  #   - TRANSMISSION_SPEED_LIMIT_UP=30
  #   - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
  #   - TRANSMISSION_INCOMPLETE_DIR=/data/incomplete
  #   - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
  #   - TRANSMISSION_WATCH_DIR=/data/watch
  #   - TRANSMISSION_WATCH_DIR_ENABLED=true
  #   - TRANSMISSION_DOWNLOAD_DIR=/data/completed

 # Radarr – Movie Download and Management
  radarr:
    image: "linuxserver/radarr:develop"
    hostname: radarr
    container_name: "radarr"
    volumes:
    - ${USERDIR}/docker/radarr:/config
    - ${USERDIR}/Downloads/completed:/downloads
    - ${USERDIR}/media/movies:/movies
    - ${USERDIR}/docker/shared:/shared
    ports:
    - "7878:7878"
    restart: always
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}

  # Sonarr – TV Show Download and Management
  sonarr:
    image: "linuxserver/sonarr:preview"
    hostname: sonarr
    container_name: "sonarr"
    volumes:
    - ${USERDIR}/docker/sonarr:/config
    - ${USERDIR}/Downloads/completed:/downloads
    - ${USERDIR}/media/tvshows:/tv
    - ${USERDIR}/docker/shared:/shared
    ports:
    - "8989:8989"
    restart: always
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}

  # Plex Media Server
  plexms:
    container_name: plexms
    hostname: plexms
    restart: always
    image: plexinc/pms-docker
    volumes:
    - ${USERDIR}/docker/plexms:/config
    - ${USERDIR}/Downloads/plex_tmp:/transcode
    - ${USERDIR}/media/tvshows:/tv
    - ${USERDIR}/media/movies:/movies
    - ${USERDIR}/docker/shared:/shared
    ports:
    - "32400:32400/tcp"
    - "3005:3005/tcp"
    - "8324:8324/tcp"
    - "32469:32469/tcp"
    - "1900:1900/udp"
    - "32410:32410/udp"
    - "32412:32412/udp"
    - "32413:32413/udp"
    - "32414:32414/udp"
    environment:
    - TZ=${TZ}
    - HOSTNAME="Docker Plex"
    - PLEX_CLAIM="claim-InsertYourClaimCode"
    - PLEX_UID=${PUID}
    - PLEX_GID=${PGID}
    - ADVERTISE_IP="http://192.168.1.100:32400/"

  # Jackett – Torrent Proxy
  jackett:
    image: "linuxserver/jackett:latest"
    hostname: jackett
    container_name: "jackett"
    volumes:
    - ${USERDIR}/docker/jackett:/config
    - ${USERDIR}/Downloads/completed:/downloads
    - ${USERDIR}/docker/shared:/shared
    ports:
    - "9117:9117"
    restart: always
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}

  # NZBGet - UseNet setup
  nzbget:
    image: linuxserver/nzbget:latest
    hostname: "nzbget"
    container_name: "nzbget"
    ports:
    - "6789:6789"
    volumes:
    - ${USERDIR}/Downloads/:/downloads
    - ${USERDIR}/docker/nzbget/config:/config
    restart: always
    environment: 
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
  
  filebot:
    image: ghostserverd/filebot:4.9.x
    container_name: filebot
    hostname: filebot
    ports:
      - "7676:7676"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - FILEBOT_PORT="7676"
      - FILEBOT_FORMAT={plex} - {hd}
      - FILEBOT_FILTER="any{ age < 30 }{ true } || !model.any{ it.age < 30 && it.age != null }"
      - FILEBOT_ACTION="duplicate"
      - FILEBOT_CONFLICT="auto"
      - FILEBOT_SERIES_DB="TheMovieDB::TV"
      - FILEBOT_ANIME_DB="AniDB"
      - FILEBOT_MOVIE_DB="TheMovieDB"
      - FILEBOT_MUSIC_DB="ID3"
      - OPEN_SUB_USER=smrtrock
      - OPEN_SUB_PASS=vecefuh
    volumes:
      - ${USERDIR}/filebot:/config
      - ${USERDIR}/Downloads:/downloads
      - ${USERDIR}/media:/media
      - ${USERDIR}/share:/share