api:
  dashboard: true
  debug: true
  insecure: true

pilot:
  token: a0d69f6b-eac9-4178-99fb-5374988e653b

certificateResolvers:
  dns-cloudflare:
    acme:
      email: smrtrock@outlook.com
      storage: acme.json
      # LetsEncrypt Staging Server - uncomment when testing
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      dnschallenge:
        provider: cloudflare
        delayBeforeCheck: 90
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"

entryPoints:
  web:
    address: ":80"
  websecure:
    address: ":443"
    forwardedheaders:
      trustedIPs:
        - 173.245.48.0/20
        - 103.21.244.0/22
        - 103.22.200.0/22
        - 103.31.4.0/22
        - 141.101.64.0/18
        - 108.162.192.0/18
        - 190.93.240.0/20
        - 188.114.96.0/20
        - 197.234.240.0/22
        - 198.41.128.0/17
        - 162.158.0.0/15
        - 104.16.0.0/12
        - 172.64.0.0/13
        - 131.0.72.0/22
  traefik:
    address: ":8080"

file:
  watch: true
  directory: "/rules"
  debugLogGeneratedTemplate: true

global:
  checknewversion: true
  # sendanonymoususage: true

log:
  level: DEBUG
  # filepath: /traefik.event.log

accesslog:
  filepath: /traefik.access.log
  bufferingsize: 100
  filters:
    statusCodes: 400-599

http:
  middlewares:
    auth:
      basic-auth:
        user: smrtrock:$apr1$ce8gn68o$v2.a/Mz.HjoMlASielWJ8/
    redirect-to-https:
      redirectscheme: https
      permanent: true
    rate-limit:
      average: 100
      burst: 50
    
  routers:
    api:
      rule: Host(`traefik.docker.localhost`)
      entrypoints:
        - traefik
        - web
      services: api@internal
    #   middlewares: auth
    # http-catchall:
    #   entrypoints: web
    #   rule: HostRegexp(`{host:.+})
    #   middlewares: redirect-to-https
        
providers:
  docker:
    exposedByDefault: false
    swarmMode: false

serversTransport:
  insecureSkipVerify: true